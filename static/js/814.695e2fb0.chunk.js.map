{"version":3,"file":"static/js/814.695e2fb0.chunk.js","mappings":"qOACA,EAA8B,iCAA9B,EAAgF,oCAAhF,EAAkI,iCAAlI,EAAiL,iC,mBCAjL,EAA8B,mCAA9B,EAAgF,oC,SCkChF,EA5B+B,SAACA,GAC5B,OAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,UAASD,EAAMI,QAA3C,eAAOA,EAAP,KAAeC,EAAf,KAiBI,OALJC,EAAAA,EAAAA,YAAU,WACND,EAAUL,EAAMI,UACjB,CAACJ,EAAMI,UAGC,4BACDF,IAAY,0BACV,iBAAMK,UAAWC,EAAeC,cAlBnB,WACrBN,GAAY,IAiBJ,SAAkEH,EAAMI,QAAU,mBAErFF,IAAa,0BACV,kBAAOK,UAAWC,EAAgBE,SAbzB,SAACC,GAClBN,EAAUM,EAAEC,cAAcC,QAY0CC,WAAS,EAACC,OAlBvD,WACvBZ,GAAY,GACZH,EAAMgB,aAAaZ,IAgBuFa,YAAa,SAAUJ,MAAOT,U,sCCpBnIc,EAA8C,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,QAASH,EAAwC,EAAxCA,aAAcZ,EAA0B,EAA1BA,QAA0B,YAC1G,OAAKe,GAID,iCACI,gBAAKZ,UAAWC,EAAhB,UACI,gBACIY,IAAI,6GAEZ,iBAAKb,UAAWC,EAAhB,WAEI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKY,IAAKD,EAAQE,OAAOC,WAE7B,iBAAKf,UAAWC,EAAhB,WACI,wBAAKW,EAAQI,YACb,uBAAIJ,EAAQK,WACZ,yCAAiBL,EAAQM,8BACzB,SAAC,EAAD,CAAwBrB,OAAQA,EAAQY,aAAcA,cAjB3D,SAACU,EAAA,EAAD,K,UCZf,EAAgC,+BAAhC,EAAiF,iCCAjF,EAAuB,mBAAvB,EAAsD,wBAAtD,EAA6F,2BAA7F,EAAoI,wBCyBpI,EAjBsC,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAC1C,OACI,gBAAKrB,UAAWsB,EAAhB,UACI,iBAAKtB,UAAWsB,EAAhB,WACI,gBACIT,IAAI,4JACR,gBAAKb,UAAWsB,EAAhB,SACKF,KAEL,iBAAKpB,UAAWsB,EAAhB,WACI,iCAAO,gBAAKT,IAAI,+FAA+FU,IAAI,aADvH,IACyIF,W,6DCXnJG,GAAqBC,EAAAA,EAAAA,GAAiB,IA6BtCC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,8BAAjBD,EAXL,SAAClC,GACpB,OAAQ,kBAAMO,UAAWsB,EAAyBO,SAAUpC,EAAMqC,aAA1D,WACA,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EAAUC,KAAK,cAAcxB,YAAa,cAAeyB,SAAU,CAACC,EAAAA,EAAUZ,QAEpG,0BACI,iD,UCDHa,GAAmBC,EAAAA,EAAAA,KAZV,SAACC,GACnB,MAAO,CACHC,MAAOD,EAAME,YAAYD,UAGR,SAACE,GACtB,MAAO,CACHC,QAAS,SAACC,GACNF,GAASG,EAAAA,EAAAA,IAAUD,QAICN,EDrBmB,SAAC,GAAoC,IAAnCK,EAAkC,EAAlCA,QAASH,EAAyB,EAAzBA,MAItDM,IAJ+E,YAIhEN,EAAMO,KAAI,SAACC,EAAGC,GAAJ,OACzB,SAAC,EAAD,CAAkBC,GAAIF,EAAEE,GAAI9B,KAAM4B,EAAE5B,KAAMC,UAAW2B,EAAE3B,WAA5C4B,OAEf,OACI,4BACI,eAAIjD,UAAWsB,EAAf,uBACA,SAACI,EAAD,CAAqBG,SATb,SAACsB,GACbR,EAAQQ,EAAOP,gBASVE,Q,sCEFb,EAT4C,SAAC,GAAmD,IAAlDlC,EAAiD,EAAjDA,QAASf,EAAwC,EAAxCA,OAAQY,EAAgC,EAAhCA,cAAgC,YAC3F,OACI,4BACI,SAACE,EAAD,CAAaC,QAASA,EAASf,OAAQA,EAAQY,aAAcA,KAC7D,SAAC4B,EAAD,Q,8BC0BNe,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAiBD,OAjBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,oBAAAA,MACF,WACI,IAAIC,EAASC,KAAK7D,MAAM8D,MAAMC,OAAOH,OACjCA,IACAA,EAAOC,KAAK7D,MAAMgE,mBAEdH,KAAK7D,MAAMiE,QAAQC,KAAK,UAGhCL,KAAK7D,MAAMmE,eAAeP,GAC1BC,KAAK7D,MAAMoE,cAAcR,KAC5B,oBAED,WACI,OACI,SAAC,GAAD,kBAAaC,KAAK7D,OAAlB,IAAyBmB,QAAS0C,KAAK7D,MAAMmB,QAASf,OAAQyD,KAAK7D,MAAMI,OAAQY,aAAc6C,KAAK7D,MAAMgB,oBAEjH,EAjBC2C,CAAyBU,EAAAA,WAoB/B,GAAeC,EAAAA,EAAAA,KACXzB,EAAAA,EAAAA,KA7BkB,SAACC,GAAD,MAA+C,CACjE3B,QAAS2B,EAAME,YAAY7B,QAC3Bf,OAAQ0C,EAAME,YAAY5C,OAC1BmE,OAAQzB,EAAM0B,KAAKD,OACnBP,iBAAkBlB,EAAM0B,KAAKf,MAyBJ,CAACU,eAAgBM,EAAAA,GAAkBL,cAAeM,EAAAA,GAAa1D,aAAc2D,EAAAA,KACtGC,EAAAA,GAAYC,EAAAA,EAFhB,CAEkClB,I,iICtD9BmB,EAA6B,SAAChC,GAAD,MAA0D,CACvFyB,OAAQzB,EAAM0B,KAAKD,SAGhB,SAASM,EAAqBE,GAQlC,OADsClC,EAAAA,EAAAA,IAAQiC,EAARjC,EANrC,SAA2B7C,GACvB,IAAKuE,EAAwBvE,EAAxBuE,OAAWS,GAAhB,OAA6BhF,EAA7B,GACA,OAAKuE,GACE,SAACQ,GAAD,UAAeC,KADF,SAAC,KAAD,CAAUC,GAAI,gB,mECd3B,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IACIE,EAAKC,EADLC,GAAS,OAA6BJ,EAAQC,GAGlD,GAAII,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBN,GAEpD,IAAKG,EAAI,EAAGA,EAAII,EAAiBC,OAAQL,IACvCD,EAAMK,EAAiBJ,GACnBF,EAASQ,QAAQP,IAAQ,GACxBG,OAAOK,UAAUC,qBAAqBC,KAAKZ,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,IAIzB,OAAOE","sources":["webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","webpack://samurai-way/./src/components/Profile/ProfileInfo/ProfileStatus.module.css?417b","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://samurai-way/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://samurai-way/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profileInfo\":\"ProfileInfo_profileInfo__QG8TK\",\"profile_avatar\":\"ProfileInfo_profile_avatar__VJNQY\",\"profile_top\":\"ProfileInfo_profile_top__43BOW\",\"description\":\"ProfileInfo_description__u7GZ5\"};","// extracted by mini-css-extract-plugin\nexport default {\"status_span\":\"ProfileStatus_status_span__zHK1n\",\"status_input\":\"ProfileStatus_status_input__bTamG\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport s from \"./ProfileStatus.module.css\"\n\ntype ProfileStatusWithHooksPropsType = {\n    status: string\n    updateStatus: (status: string)=> void\n}\nconst ProfileStatusWithHooks = (props: ProfileStatusWithHooksPropsType) => {\n    const [editMode, setEditMode] = useState(false)\n    const [status, setStatus] = useState(props.status)\n    const activateEditMode = ()=> {\n        setEditMode(true)\n    }\n    const deactivateEditMode = ()=> {\n        setEditMode(false)\n        props.updateStatus(status)\n\n    }\n    const onStatusChange=(e: ChangeEvent<HTMLInputElement>)=>{\n        setStatus(e.currentTarget.value)\n    }\n    useEffect(()=>{\n        setStatus(props.status)\n    }, [props.status])\n\n\n        return <div>\n            {!editMode && <div>\n                <span className={s.status_span} onDoubleClick={activateEditMode}>{props.status || \"no status :(\"}</span>\n            </div>}\n            {editMode  && <div>\n                <input className={s.status_input} onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} placeholder={\"status\"} value={status}/>\n            </div>}\n        </div>\n    }\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport {Preloader} from \"../../../common/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\ntype ProfileInfoPropsType = {\n    profile: any\n    status: string\n    updateStatus: (status: string) => void\n}\n\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile, updateStatus, status, ...restProps}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n        <>\n            <div className={s.profile_top}>\n                <img\n                    src=\"https://www.xmple.com/wallpaper/blue-violet-gradient-linear-1920x1080-c2-1e90ff-66078b-a-225-f-14.svg\"/>\n            </div>\n            <div className={s.profileInfo}>\n\n                <div className={s.profile_avatar}>\n                    <img src={profile.photos.small}/>\n                </div>\n                <div className={s.description}>\n                    <h2>{profile.fullName}</h2>\n                    <p>{profile.aboutMe}</p>\n                    <p>Looking job: {profile.lookingForAJobDescription}</p>\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n                </div>\n            </div>\n        </>\n    );\n\n};","// extracted by mini-css-extract-plugin\nexport default {\"myPostsHeader\":\"MyPosts_myPostsHeader__Tner+\",\"textArea_Button\":\"MyPosts_textArea_Button__PXBSb\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__wW6-Y\",\"postStyle\":\"Post_postStyle__RX8XC\",\"avatarOfPost\":\"Post_avatarOfPost__Y5UhE\",\"likeCount\":\"Post_likeCount__kwfc5\"};","import React from \"react\";\nimport classes from \"./Post.module.css\";\n\nexport type PostPropsType = {\n    id: number\n    post: string\n    likeCount: number\n}\n\nconst Post: React.FC<PostPropsType> = ({post, likeCount}) => {\n    return (\n        <div className={classes.post}>\n            <div className={classes.avatarOfPost}>\n                <img\n                    src=\"https://static.vecteezy.com/system/resources/previews/004/899/833/large_2x/beautiful-girl-with-blue-hair-avatar-of-woman-for-social-network-vector.jpg\"/>\n                <div className={classes.postStyle}>\n                    {post}\n                </div>\n                <div className={classes.likeCount}>\n                    <span> <img src=\"https://www.pinclipart.com/picdir/middle/59-595072_heart-instagram-like-icon-png-clipart.png\" alt=\"likes\"/></span> {likeCount}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import React from \"react\";\nimport classes from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport {MyPostsPropsType} from \"./MyPostsContainer\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../../common/Forms-control/FormsControl\";\n\nconst maxLengthCreator30 = maxLengthCreator(30);\n\nexport const MyPosts: React.FC<MyPostsPropsType> = ({addPost, posts, ...restProps}) => {\n    let onAddPost = (values: any) => {\n        addPost(values.newPostText);\n    }\n    let postElements = posts.map((p, index) => (\n        <Post key={index} id={p.id} post={p.post} likeCount={p.likeCount}/>))\n\n    return (\n        <div>\n            <h3 className={classes.myPostsHeader}>My posts</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            {postElements}\n        </div>\n    )\n}\n\nconst AddNewPostForm = (props: any) => {\n    return (<form className={classes.textArea_Button} onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea} name=\"newPostText\" placeholder={\"What's new?\"} validate={[required, maxLengthCreator30]}/>\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostFormRedux\"})(AddNewPostForm)","import React from \"react\";\nimport {addPostAC} from \"../../../redux/profile-reducer\";\nimport {MyPosts} from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {Dispatch} from \"redux\";\n\ntype PostType = {\n    id: number\n    post: string\n    likeCount: number\n}\ntype MapStateToPropsType = {\n    posts: PostType[]\n}\ntype MapDispatchToProps = {\n    addPost: (newPostText: string)=>void\n}\nexport type MyPostsPropsType = MapStateToPropsType & MapDispatchToProps\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType=> {\n    return {\n        posts: state.profilePage.posts\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchToProps => {\n    return {\n        addPost: (newPostText: string) => {\n            dispatch(addPostAC(newPostText));\n        }\n    }\n}\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n","import React from \"react\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\n\ntype ProfilePropsType = {\n    profile: any\n    status: string\n    updateStatus: (status: string) => void\n}\n\nconst Profile: React.FC<ProfilePropsType> = ({profile, status, updateStatus, ...restProps}) => {\n    return (\n        <div>\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\n            <MyPostsContainer/>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    getStatusTC,\n    getUserProfileTC,\n    updateStatusTC\n} from \"../../redux/profile-reducer\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\ntype MapStateToPropsType = {\n    profile: any\n    status: string\n    isAuth: boolean\n    authorizedUserID: number | null\n\n}\ntype MapDispatchToPropsType = {\n    getUserProfile: (profile: any) => void\n    getUserStatus: (userID: number ) => void\n    updateStatus: (status: string)=> void\n}\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType\ntype PathParamsType = {\n    userID: any\n}\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    authorizedUserID: state.auth.id\n\n})\n\nclass ProfileContainer extends React.Component<PropsType> {\n    componentDidMount() {\n        let userID = this.props.match.params.userID\n        if(!userID){\n            userID=this.props.authorizedUserID\n            if (!userID){\n                this.props.history.push(\"/login\")\n            }\n        }\n        this.props.getUserProfile(userID)\n        this.props.getUserStatus(userID)\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nexport default compose <React.ComponentType>(\n    connect(mapStateToProps, {getUserProfile: getUserProfileTC, getUserStatus: getStatusTC, updateStatus: updateStatusTC}),\n    withRouter, withAuthRedirect)(ProfileContainer)","import React, {ComponentType} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {AppStateType} from \"../redux/redux-store\";\nimport {connect} from \"react-redux\";\n\ntype MapStateToPropsForRedirectType = {\n    isAuth: boolean\n}\nlet mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsForRedirectType => ({\n    isAuth: state.auth.isAuth\n})\n\nexport function withAuthRedirect <T>(Component: ComponentType<T>){\n    function RedirectComponent(props: MapStateToPropsForRedirectType) {\n        let {isAuth, ...restProps} = props\n        if (!isAuth) return <Redirect to={\"/login\"}/>\n        return <Component {...restProps as T}/>\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\n   return ConnectedAuthRedirectComponent;\n};\n\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","placeholder","ProfileInfo","profile","src","photos","small","fullName","aboutMe","lookingForAJobDescription","Preloader","post","likeCount","classes","alt","maxLengthCreator30","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","validate","required","MyPostsContainer","connect","state","posts","profilePage","dispatch","addPost","newPostText","addPostAC","postElements","map","p","index","id","values","ProfileContainer","userID","this","match","params","authorizedUserID","history","push","getUserProfile","getUserStatus","React","compose","isAuth","auth","getUserProfileTC","getStatusTC","updateStatusTC","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","restProps","to","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}